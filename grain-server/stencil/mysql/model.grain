package model

import (
	sysModel "{{.ProjectName}}/model/system"
)

  type {{.StructName}} struct {
    sysModel.Model
  UID       string         `json:"uid" gorm:"comment:用户唯一标识符"`
    {{range .Fields}}
    {{if eq .Required "yes"}}
         {{if .MysqlField}}
              {{if .ValidationRules}}
                  {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"required,{{.ValidationRules}}" gorm:"column:{{.MysqlField}};comment:{{.Description}}"`
              {{else}}
                  {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"required" gorm:"column:{{.MysqlField}};comment:{{.Description}}"`
              {{end}}
        {{else}}
          {{if .ValidationRules}}
              {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"required,{{.ValidationRules}}" gorm:"comment:{{.Description}}"`
          {{else}}
              {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"required" gorm:"comment:{{.Description}}"`
            {{end}}
        {{end}}
   {{else}}
         {{if .MysqlField}}
            {{if .ValidationRules}}
                {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"{{.ValidationRules}}" gorm:"column:{{.MysqlField}};comment:{{.Description}}"`
            {{else}}
                {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" gorm:"column:{{.MysqlField}};comment:{{.Description}}"`
            {{end}}
        {{else}}
          {{if .ValidationRules}}
              {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"{{.ValidationRules}}" gorm:"comment:{{.Description}}"`
          {{else}}
              {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" gorm:"comment:{{.Description}}"`
            {{end}}{{end}}
   {{end}}{{end}}
  }

func ({{.StructName}}) TableName()string  {
	return "{{.Name}}"
}

  type Create{{.StructName}} struct {
  UID       string         `json:"uid" gorm:"comment:用户唯一标识符"`
    {{range .Fields}}
    {{if eq .Required "yes"}}
         {{if .MysqlField}}
              {{if .ValidationRules}}
                  {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"required,{{.ValidationRules}}" gorm:"column:{{.MysqlField}}"`
              {{else}}
                  {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"required" gorm:"column:{{.MysqlField}}"`
              {{end}}
        {{else}}
          {{if .ValidationRules}}
              {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"required,{{.ValidationRules}}" gorm:"comment:{{.Description}}"`
          {{else}}
              {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"required" gorm:"comment:{{.Description}}"`
            {{end}}
        {{end}}
   {{else}}
         {{if .MysqlField}}
            {{if .ValidationRules}}
                {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"{{.ValidationRules}}" gorm:"column:{{.MysqlField}}"`
            {{else}}
                {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" gorm:"column:{{.MysqlField}}"`
            {{end}}
        {{else}}
          {{if .ValidationRules}}
              {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" binding:"{{.ValidationRules}}" gorm:"comment:{{.Description}}"`
          {{else}}
              {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" gorm:"comment:{{.Description}}"`
            {{end}}{{end}}
   {{end}}{{end}}
  }

type Update{{.StructName}} struct {
  UID       string         `json:"uid" gorm:"comment:用户唯一标识符"`
    {{range .Fields}} {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}"`
    {{end}}
  }

type {{.StructName}}Query struct {
  sysModel.PageReq
  {{range .Fields}}{{if .QueryCriteria}}{{if .MysqlField}}{{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" gorm:"column:{{.MysqlField}}"`{{else}}{{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" gorm:"comment:{{.Description}}"`{{end}}
  {{end}}{{end}}{{if eq .QueryTime "yes"}}QueryTime string ` form:"queryTime" json:"queryTime"`{{end}}
}

type {{.StructName}}Res struct {
  sysModel.Model
  Nickname string `json:"nickname;omitempty" gorm:"-"`
  Username string `json:"username;omitempty" gorm:"-"`
  {{range .Fields}}{{if .MysqlField}}{{.Name}} {{.Type}} `json:"{{.JsonTag}}" gorm:"column:{{.MysqlField}}"`
  {{else if eq .Required "yes"}}{{.Name}} {{.Type}} `json:"{{.JsonTag}}" gorm:"comment:{{.Description}}"`
  {{else}}{{.Name}} {{.Type}} `json:"{{.JsonTag}}" gorm:"comment:{{.Description}}"`
  {{end}}{{end}}}