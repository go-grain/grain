package model

import (
	sysModel "{{.ProjectName}}/model/system"
)

type {{.StructName}} struct {
  sysModel.Model
  UID       string         `form:"uid" json:"uid" gorm:"comment:用户唯一标识符"`
  {{range .Fields}}{{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}" {{if .Required}} binding:"required" {{if .ValidationRules}},{{.ValidationRules}}"{{end}} {{end}} gorm:"{{if .MysqlType}}type:{{.MysqlType}};{{end}}{{if .MysqlField}}column:{{.MysqlField}};{{end}}comment:{{.Description}}"`
  {{end}}
 }

func ({{.StructName}}) TableName()string  {
	return "{{.Name}}"
}

type Create{{.StructName}} struct {
  UID       string         `form:"uid" json:"uid" gorm:"comment:用户唯一标识符"`
  {{range .Fields}}{{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}"`
  {{end}}
}

type Update{{.StructName}} struct {
  ID          uint     `form:"id" json:"id"`
  UID       string         `form:"uid" json:"uid" gorm:"comment:用户唯一标识符"`
  {{range .Fields}} {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}"`
  {{end}}
  }

type {{.StructName}}Query struct {
  sysModel.PageReq
  {{range .Fields}}{{if .QueryCriteria}} {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}"`
  {{end}}{{end}}
}

type {{.StructName}}Res struct {
  sysModel.Model
  Nickname string `form:"uid" json:"nickname;omitempty" `
  Username string `form:"uid" json:"username;omitempty" `
  {{range .Fields}} {{.Name}} {{.Type}} `form:"{{.JsonTag}}" json:"{{.JsonTag}}"`
  {{end}}
}